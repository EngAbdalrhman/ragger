# Server Configuration
server.port=8080

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/springai
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# File Upload Configuration
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.location=${java.io.tmpdir}

# Cache Configuration
spring.cache.type=caffeine
spring.cache.cache-names=chunks,documents,collections
spring.cache.caffeine.spec=maximumSize=1000,expireAfterAccess=30m

# Batch Processing
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=10
spring.task.execution.pool.queue-capacity=25
spring.task.execution.thread-name-prefix=rag-async-

# Retry Configuration
spring.retry.max-attempts=3
spring.retry.initial-interval=1000
spring.retry.multiplier=2
spring.retry.max-interval=10000

# Transaction Configuration
spring.transaction.default-timeout=30s
spring.jpa.properties.hibernate.lock.timeout=10000

# Logging Configuration
logging.level.com.example.springai=INFO
logging.level.org.springframework.ai=INFO
logging.level.org.springframework.transaction=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# OpenAI Configuration
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.model=gpt-3.5-turbo
spring.ai.openai.temperature=0.7

# Vertex AI (Google) Configuration
spring.ai.vertex.ai.project-id=${GOOGLE_CLOUD_PROJECT}
spring.ai.vertex.ai.location=us-central1
spring.ai.vertex.ai.model=gemini-pro

# Document Processing
app.rag.chunk-size=1000
app.rag.chunk-overlap=100
app.rag.max-chunks-per-document=1000
app.rag.similar-chunks-limit=3
app.rag.embedding-batch-size=50

# Collection Configuration
app.rag.max-collections-per-user=100
app.rag.max-documents-per-collection=1000

# Version Control
app.rag.max-versions-per-document=50
app.rag.version-retention-days=90

# Initialize Vector Extension
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:db/vector-extension.sql